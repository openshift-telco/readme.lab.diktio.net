# Mirroring the OpenShift Container Platform image repository

mkdir -p ~/.docker
#Copy your pull secret to ~/.docker/config.json
#Add your registry account credentials in ~/.docker/config.json

export OCP_REL_MAJ=4
export OCP_REL_MIN=10
export OCP_REL_MNT=20
export RELEASE=v${OCP_REL_MAJ}.${OCP_REL_MIN}
export RELEASE_IMAGE=$(curl -s https://mirror.openshift.com/pub/openshift-v4/clients/ocp/${OCP_REL_MAJ}.${OCP_REL_MIN}.${OCP_REL_MNT}/release.txt | grep 'Pull From: quay.io' | awk -F ' ' '{print $3}'); echo $RELEASE_IMAGE
export UPSTREAM_REPO=${RELEASE_IMAGE}
export LOCAL_REGISTRY='lab-registry.snoacm.lab.diktio.net'
export LOCAL_REGISTRY_ACCOUNT=nsatsia
export LOCAL_REPOSITORY=$LOCAL_REGISTRY_ACCOUNT'/ocp'${OCP_REL_MAJ}${OCP_REL_MIN}${OCP_REL_MNT}
export LOCAL_SECRET_JSON=~/pull-secret-update.json

#Mirror OCP images
##################
oc adm release mirror \
  -a $LOCAL_SECRET_JSON \
  --from=$UPSTREAM_REPO \
  --to-release-image=$LOCAL_REGISTRY/$LOCAL_REPOSITORY:${OCP_REL_MAJ}.${OCP_REL_MIN}.${OCP_REL_MNT} \
  --to=$LOCAL_REGISTRY/$LOCAL_REPOSITORY

oc -a $LOCAL_SECRET_JSON image mirror quay.io/openshift-release-dev/ocp-release:${OCP_REL_MAJ}.${OCP_REL_MIN}.${OCP_REL_MNT}-x86_64 $LOCAL_REGISTRY/$LOCAL_REGISTRY_ACCOUNT/openshift-release-dev/ocp-release:${OCP_REL_MAJ}.${OCP_REL_MIN}.${OCP_REL_MNT}-x86_64 --insecure=true

oc -a $LOCAL_SECRET_JSON  image mirror registry.redhat.io/openshift4/ose-tools-rhel8:latest ${LOCAL_REGISTRY}/$LOCAL_REGISTRY_ACCOUNT/openshift4/ose-tools-rhel8:latest


#Mirror operators
#################
#Strongly recommended this is done on SSD or NVMe disk else it will be much slower ;-)
#Need ~50GB free space for this Operator selection
#Need podman installed locally
#
# Ref:
#    https://cloud.redhat.com/blog/how-oc-mirror-will-help-you-reduce-container-management-complexity
#    https://chowdera.com/2022/04/202204170052072472.html
#    https://docs.openshift.com/container-platform/4.9/installing/installing-mirroring-installation-images.html


mkdir mirror
cd mirror

oc-mirror list operators --catalog=registry.redhat.io/redhat/redhat-operator-index:v4.10 > redhat-operator-4-10.txt

## Copying Index locally as it takes minutes each time on a slow home internet :(

OLD=$(podman images | egrep 4.10 | egrep redhat-operator-index | awk '{print $3}')
podman stop `podman ps | egrep 50051 | awk '{print $1}'`
podman rmi $OLD --force
podman run -p50051:50051  -d   -it registry.redhat.io/redhat/redhat-operator-index:$RELEASE

#Note, the same list of selected Operators to mirror for DU
#need opm app from https://console.redhat.com/openshift/downloads

opm index prune \
    -f  registry.redhat.io/redhat/redhat-operator-index:$RELEASE  \
    -p    cluster-logging,clusterresourceoverride,kubernetes-nmstate-operator,local-storage-operator,nfd,odf-csi-addons-operator,odf-lvm-operator,odf-operator,openshift-gitops-operator,performance-addon-operator,ptp-operator,sriov-network-operator,web-terminal \
    -t $LOCAL_REGISTRY/$LOCAL_REGISTRY_ACCOUNT/redhat-operator-index:$RELEASE

#Adjust according ly for your registry account, mine is "$LOCAL_REGISTRY_ACCOUNT"
podman login $LOCAL_REGISTRY/$LOCAL_REGISTRY_ACCOUNT
podman push $LOCAL_REGISTRY/$LOCAL_REGISTRY_ACCOUNT/redhat-operator-index:$RELEASE

#Build the imageset-config.yaml

mkdir -p channel
rm -f channel/*
mkdir -p version
rm -f version/*

echo "apiVersion: mirror.openshift.io/v1alpha1
kind: ImageSetConfiguration
storageConfig:
  local:
    path: metadata
mirror:
  operators:
    - catalog: registry.redhat.io/redhat/redhat-operator-index:$RELEASE
      headsOnly: false
      packages:" > imageset-config.yaml

#Note, the same list of selected Operators to mirror for DU
for OPERATOR in \
  multicluster-engine \
  cluster-logging \
  clusterresourceoverride \
  kubernetes-nmstate-operator \
  local-storage-operator \
  nfd \
  odf-csi-addons-operator \
  odf-lvm-operator \
  odf-operator \
  openshift-gitops-operator \
  performance-addon-operator \
  ptp-operator \
  sriov-network-operator \
  web-terminal
do echo $OPERATOR
  egrep $OPERATOR redhat-operator-4-10.txt   2>/dev/null > channel/$OPERATOR.txt
  export CHANNEL=$(cat channel/$OPERATOR.txt | egrep -v PACKAGE | sort | tail -1 | awk '{print $NF}')
  if [ ! -f version/$OPERATOR.txt ]; then
    oc-mirror list operators --catalog=$LOCAL_REGISTRY//redhat-operator-index:$RELEASE --channel=$CHANNEL --package=$OPERATOR 2>/dev/null > version/$OPERATOR.txt
  fi
  export VERSION=$(cat version/$OPERATOR.txt | egrep -v VERSION | sort |tail -1)
  echo "        - name: $OPERATOR
          channels:
            - name: $CHANNEL
          startingVersion: '$VERSION'"  >> imageset-config.yaml;
done        

oc -a $LOCAL_SECRET_JSON  image mirror registry.redhat.io/redhat/redhat-operator-index:$RELEASE ${LOCAL_REGISTRY}//redhat/redhat-operator-index:$RELEASE


## ADJUST any issues in imageset-config.yaml
## Example some versions that are numbers only you'd need to quote (e.g. '4.10')
## The multicluster-engine oeprator does not pick up a starting version, I set it to '2.0.0' but it could change in the future


#Mirror to local registry via local disk

# OPTIONAL DIRECT: oc-mirror --continue-on-error --skip-cleanup --config imageset-config.yaml docker://$LOCAL_REGISTRY/$LOCAL_REGISTRY_ACCOUNT

rm -Rf oc-mirror-operators/mirror_seq*
rm -Rf oc-mirror-operators/oc-mirror-workspace/operators.*
rm -Rf oc-mirror-workspace/*
rm -f metadata/publish/.metadata.json

oc-mirror  --continue-on-error --skip-cleanup --config imageset-config.yaml file://oc-mirror-operators

oc-mirror --from ./oc-mirror-operators/mirror_seq1_000000.tar docker://${LOCAL_REGISTRY}/$LOCAL_REGISTRY_ACCOUNT

